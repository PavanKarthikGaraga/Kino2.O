rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             request.auth.token.email.matches(".*@admin\\.com$");
    }

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Default rule - restrict access unless specifically allowed
    match /{document=**} {
      allow read, write: if false; // Deny all access by default
    }

    // Rules for new registrations collection
    match /newRegistrations/{registrationId} {
      // Allow reading and querying without authentication for registration process
      allow read, list: if true;
      // Anyone can create a registration
      allow create: if true;
      // Allow updates for payment status and transaction details
      allow update: if 
        // Only allow updating specific fields
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['paymentStatus', 'transactionId', 'paymentDate', 'paymentMethod']) &&
        // Ensure payment status can only be set to 'pending_verification'
        request.resource.data.paymentStatus == 'pending_verification' &&
        // Verify the document belongs to the user making the update
        resource.data.email == request.resource.data.email;
      // Only admins can delete registrations
      allow delete: if isAdmin();
    }
    
    // Rules for old registrations collection
    match /registrations/{registrationId} {
      allow read: if isAuthenticated(); 
      allow create, update, delete: if isAdmin();
    }
    
    // Rules for workshop registrations
    match /workshopRegistrations/{registrationId} {
      allow read: if isAuthenticated(); 
      allow create: if true; 
      allow update, delete: if isAdmin();
    }
    
    // Rules for payments collection
    match /payments/{paymentId} {
      allow read: if isAuthenticated(); 
      allow create: if true; 
      allow update, delete: if isAdmin();
    }
    
    // Rules for admin-only collections
    match /adminData/{document=**} {
      allow read, write: if isAdmin();
    }
  }
} 